{"version":3,"file":"script.js","sourceRoot":"","sources":["../src/script.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * DOM element representing the progress container\n * @type {HTMLElement}\n */\nconst container = document.querySelector('.progress-container') as HTMLElement | null;\n/**\n * DOM element representing the progress bar\n * @type {HTMLElement}\n */\nconst progressBar = document.querySelector('.progress') as HTMLElement | null;\n/**\n * DOM element representing the status text\n * @type {HTMLElement}\n */\nconst statusText = document.querySelector('.status') as HTMLElement | null;\n/**\n * DOM element representing the time text\n * @type {HTMLElement}\n */\nconst timeText = document.querySelector('.time') as HTMLElement | null;\n\n\n/**\n * MediaQueryList object that detects portrait orientation\n * @type {MediaQueryList}\n */\nconst portraitMatcher: MediaQueryList = window.matchMedia('(orientation: portrait)');\n\ninterface Callback<T = unknown, R = unknown> {\n  // eslint-disable-next-line no-unused-vars\n  (...args: T[]): R;\n}\n\n/**\n * Creates a debounce function to avoid excessive calculations during resize\n * @param {Function} func - The function to debounce\n * @param {number} [timeout=300] - The debounce timeout in milliseconds\n * @returns {Function} - The debounced function\n */\nconst debounce = (func: Callback<unknown, void>, timeout: number = 300) => {\n  let timer: ReturnType<typeof setTimeout>;\n  return (...args: unknown[]) => {\n    if (timer) clearTimeout(timer);\n    timer = setTimeout(() => func(...args), timeout);\n  };\n};\n\n/**\n * Updates the container orientation based on screen dimensions\n * @returns {void}\n */\nconst updateContainerOrientation = (): void => {\n  const width: number = window.innerWidth;\n  const height: number = window.innerHeight;\n\n  if (!container) {\n    console.error('Progress container element not found');\n    return;\n  }\n\n  if (height > width) {\n    // Portrait Orientation\n    //container.style.transform = 'rotate(90deg)';\n    //container.style.width = `${Math.floor(height * 0.75)}px`;\n    container.classList.add('portrait');\n  } else {\n    // Landscape Orientation\n    //container.style.transform = 'rotate(0deg)';\n    //container.style.width = '75%';\n    container.classList.remove('portrait');\n  }\n};\n\n/**\n * Updates the date and time, and adjusts the progress bar and status text accordingly\n * @returns {void}\n */\nconst updateDateTime = (): void => {\n  const date: Date = new Date();\n  const hours: number = date.getHours();\n  const minutes: number = date.getMinutes();\n  const seconds: number = date.getSeconds();\n\n  const elapsed: number = hours * 3600 + minutes * 60 + seconds;\n  const progress: number = elapsed / 86400;\n\n  if (progressBar) {\n    progressBar.setAttribute('style', `transform: scaleX(${Number(progress).toFixed(3)})`);\n  }\n  if (statusText) {\n    statusText.innerHTML = `${Number(progress * 100).toFixed(2)}%`;\n  }\n  if (timeText) {\n    const h = hours.toString().padStart(2, '0');\n    const m = minutes.toString().padStart(2, '0');\n    const s = seconds.toString().padStart(2, '0');\n    timeText.innerHTML = `${h}:${m}:${s}`;\n  }\n  requestAnimationFrame(updateDateTime);\n};\n\n// Event Listeners\ndocument.addEventListener('DOMContentLoaded', updateContainerOrientation);\nportraitMatcher.addEventListener('change', debounce(updateContainerOrientation, 100));\nwindow.addEventListener('resize', debounce(updateContainerOrientation, 100));\n\n// Initialize and set timers\nrequestAnimationFrame(updateDateTime);"]}